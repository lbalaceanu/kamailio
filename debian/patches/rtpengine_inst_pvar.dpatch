#! /bin/sh /usr/share/dpatch/dpatch-run
## rtpengine_inst_pvar.dpatch by  <lbalaceanu@compaq>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine.c ui-siprouter/modules/rtpengine/rtpengine.c
--- ui-siprouter~/modules/rtpengine/rtpengine.c	2015-06-17 14:48:50.000000000 +0300
+++ ui-siprouter/modules/rtpengine/rtpengine.c	2015-06-17 14:49:36.009976943 +0300
@@ -387,6 +387,9 @@
 
 static str body_intermediate;
 
+static str rtp_inst_pv_param = {NULL, 0};
+static pv_spec_t *rtp_inst_pvar = NULL;
+
 /* array with the sockets used by rtpporxy (per process)*/
 static unsigned int rtpp_no = 0;
 static int *rtpp_socks = 0;
@@ -465,6 +468,7 @@
 	{"extra_id_pv",           PARAM_STR, &extra_id_pv_param },
 	{"setid_avp",             PARAM_STRING, &setid_avp_param },
 	{"force_send_interface",  PARAM_STRING, &force_send_ip_str	},
+	{"rtp_inst_pvar",         STR_PARAM, &rtp_inst_pv_param.s },
 	{0, 0, 0}
 };
 
@@ -1489,6 +1493,17 @@
 		}
 	}
 
+	if (rtp_inst_pv_param.s) {
+		rtp_inst_pv_param.len = strlen(rtp_inst_pv_param.s);
+		rtp_inst_pvar = pv_cache_get(&rtp_inst_pv_param);
+		if ((rtp_inst_pvar == NULL) ||
+			((rtp_inst_pvar->type != PVT_AVP) &&
+			 (rtp_inst_pvar->type != PVT_SCRIPTVAR))) {
+		LM_ERR("Invalid pvar name <%.*s>\n", rtp_inst_pv_param.len, rtp_inst_pv_param.s);
+		return -1;
+		}
+	}
+
 	if (extra_id_pv_param.s && *extra_id_pv_param.s) {
 		extra_id_pv_param.len = strlen(extra_id_pv_param.s);
 		if(pv_parse_format(&extra_id_pv_param, &extra_id_pv) < 0) {
@@ -2003,6 +2018,7 @@
 	} while (cp == NULL);
 	LM_DBG("proxy reply: %.*s\n", ret, cp);
 
+	set_rtp_inst_pvar(msg, &node->rn_url);
 	/*** process reply ***/
 
 	resp = bencode_decode_expect(bencbuf, cp, ret, BENCODE_DICTIONARY);
@@ -2711,3 +2727,20 @@
 	return -1;
 }
 
+int set_rtp_inst_pvar(struct sip_msg *msg, const str * const uri) {
+	pv_value_t val;
+
+	if (rtp_inst_pvar == NULL)
+		return 0;
+
+	memset(&val, 0, sizeof(pv_value_t));
+	val.flags = PV_VAL_STR;
+	val.rs = *uri;
+
+	if (rtp_inst_pvar->setf(msg, &rtp_inst_pvar->pvp, (int)EQ_T, &val) < 0)
+	{
+		LM_ERR("Failed to add RTPProxy URI to pvar\n");
+		return -1;
+	}
+	return 0;
+}
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine.h ui-siprouter/modules/rtpengine/rtpengine.h
--- ui-siprouter~/modules/rtpengine/rtpengine.h	2015-06-17 14:48:50.000000000 +0300
+++ ui-siprouter/modules/rtpengine/rtpengine.h	2015-06-17 14:49:36.009976943 +0300
@@ -65,6 +65,8 @@
 struct rtpp_set *get_rtpp_set(int set_id);
 int add_rtpengine_socks(struct rtpp_set * rtpp_list, char * rtpproxy);
 
+int set_rtp_inst_pvar(struct sip_msg *msg, const str * const uri);
+
 int init_rtpproxy_db(void);
 
 extern str rtpp_db_url;
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine_db.c ui-siprouter/modules/rtpengine/rtpengine_db.c
--- ui-siprouter~/modules/rtpengine/rtpengine_db.c	2015-06-17 14:48:50.000000000 +0300
+++ ui-siprouter/modules/rtpengine/rtpengine_db.c	2015-06-17 14:49:36.009976943 +0300
@@ -24,6 +24,7 @@
 #include "../../lib/srdb1/db.h"
 #include "../../lib/srdb1/db_res.h"
 
+#include "../../parser/msg_parser.h"
 #include "rtpengine.h"
 
 #define RTPP_TABLE_VERSION 1
