#! /bin/sh /usr/share/dpatch/dpatch-run
## rtpengine_allow_op.dpatch by  <miti@dell>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine.c ui-siprouter/modules/rtpengine/rtpengine.c
--- ui-siprouter~/modules/rtpengine/rtpengine.c	2015-11-10 12:46:56.000000000 +0200
+++ ui-siprouter/modules/rtpengine/rtpengine.c	2015-11-10 12:48:01.425340221 +0200
@@ -377,6 +377,7 @@
 
 
 static int rtpengine_disable_tout = 60;
+static int rtpengine_allow_op = 0;
 static int rtpengine_retr = 5;
 static int rtpengine_tout = 1000;
 static int queried_nodes_limit = MAX_RTPP_TRIED_NODES;
@@ -475,6 +476,7 @@
 	{"rtpengine_disable_tout",INT_PARAM, &rtpengine_disable_tout },
 	{"rtpengine_retr",        INT_PARAM, &rtpengine_retr         },
 	{"rtpengine_tout",        INT_PARAM, &rtpengine_tout         },
+	{"rtpengine_allow_op",    INT_PARAM, &rtpengine_allow_op     },
 	{"queried_nodes_limit",   INT_PARAM, &queried_nodes_limit    },
 	{"db_url",                PARAM_STR, &rtpp_db_url },
 	{"table_name",            PARAM_STR, &rtpp_table_name },
@@ -2475,7 +2477,7 @@
 }
 
 /*
- * lookup the hastable (key=callid value=node) and get the old node
+ * lookup the hastable (key=callid value=node) and get the old node (e.g. for answer/delete)
  */
 static struct rtpp_node *
 select_rtpp_node_old(str callid, int do_test, int op)
@@ -2502,11 +2504,22 @@
 			node->rn_url.len, node->rn_url.s, callid.len, callid.len, callid.s);
 	}
 
-	// if node broke, don't send any message
+	// if node enabled, return it
 	if (!node->rn_disabled) {
 		return node;
+	}
+
+	// if node _manually_ disabled(e.g kamctl) and proper configuration, return it
+	if (node->rn_recheck_ticks == MI_MAX_RECHECK_TICKS) {
+		if (rtpengine_allow_op) {
+			LM_DBG("node=%.*s for calllen=%d callid=%.*s is disabled(permanent) (probably still UP)! Return it\n",
+				node->rn_url.len, node->rn_url.s, callid.len, callid.len, callid.s);
+			return node;
+		}
+		LM_DBG("node=%.*s for calllen=%d callid=%.*s is disabled(permanent) (probably still UP)! Return NULL\n",
+			node->rn_url.len, node->rn_url.s, callid.len, callid.len, callid.s);
 	} else {
-		LM_DBG("rtpengine hash table lookup find node=%.*s for calllen=%d callid=%.*s, which is disabled!\n",
+		LM_DBG("node=%.*s for calllen=%d callid=%.*s is disabled (probably BROKE)! Return NULL\n",
 			node->rn_url.len, node->rn_url.s, callid.len, callid.len, callid.s);
 	}
 
