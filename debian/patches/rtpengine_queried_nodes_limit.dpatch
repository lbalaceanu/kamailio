#! /bin/sh /usr/share/dpatch/dpatch-run
## rtpengine_queried_nodes_limit.dpatch by  <lbalaceanu@compaq>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine.c ui-siprouter/modules/rtpengine/rtpengine.c
--- ui-siprouter~/modules/rtpengine/rtpengine.c	2016-01-27 10:49:56.000000000 +0200
+++ ui-siprouter/modules/rtpengine/rtpengine.c	2016-01-27 10:49:56.000000000 +0200
@@ -244,6 +244,7 @@
 
 
 #define DEFAULT_RTPP_SET_ID		0
+#define MAX_RTPP_TRIED_NODES    50
 
 #define MI_SET_NATPING_STATE		"nh_enable_ping"
 #define MI_DEFAULT_NATPING_STATE	1
@@ -369,6 +370,7 @@
 static int rtpengine_disable_tout = 60;
 static int rtpengine_retr = 5;
 static int rtpengine_tout = 1000;
+static int queried_nodes_limit = MAX_RTPP_TRIED_NODES;
 static pid_t mypid;
 static unsigned int myseqn = 0;
 static str extra_id_pv_param = {NULL, 0};
@@ -462,6 +464,7 @@
 	{"rtpengine_disable_tout",INT_PARAM, &rtpengine_disable_tout },
 	{"rtpengine_retr",        INT_PARAM, &rtpengine_retr         },
 	{"rtpengine_tout",        INT_PARAM, &rtpengine_tout         },
+	{"queried_nodes_limit",   INT_PARAM, &queried_nodes_limit    },
 	{"db_url",                PARAM_STR, &rtpp_db_url },
 	{"table_name",            PARAM_STR, &rtpp_table_name },
 	{"url_col",               PARAM_STR, &rtpp_url_col },
@@ -1533,6 +1536,11 @@
 	if (rtpp_strings)
 		pkg_free(rtpp_strings);
 
+	if ((queried_nodes_limit < 1) || (queried_nodes_limit > MAX_RTPP_TRIED_NODES)) {
+        LM_ERR("queried_nodes_limit must be a number in the range 1..50 \n");
+        return -1;
+    }
+
 	if (load_tm_api( &tmb ) < 0)
 	{
 		LM_DBG("could not load the TM-functions - answer-offer model"
@@ -1888,7 +1896,7 @@
 	struct ng_flags_parse ng_flags;
 	bencode_item_t *item, *resp;
 	str callid, from_tag, to_tag, body, viabranch, error;
-	int ret;
+	int ret, queried_nodes;
 	struct rtpp_node *node;
 	char *cp;
 
@@ -2003,7 +2011,12 @@
 	if(msg->id != current_msg_id)
 		active_rtpp_set = default_rtpp_set;
 
+	queried_nodes = 0;
 	do {
+		if (++queried_nodes > queried_nodes_limit) {
+            LM_ERR("queried nodes limit reached\n");
+            goto error;
+        }
 		node = select_rtpp_node(callid, 1);
 		if (!node) {
 			LM_ERR("no available proxies\n");
