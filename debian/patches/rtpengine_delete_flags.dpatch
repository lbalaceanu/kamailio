#! /bin/sh /usr/share/dpatch/dpatch-run
## rtpengine_delete_flags.dpatch by  <miti@dell>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ui-siprouter~/modules/rtpengine/rtpengine.c ui-siprouter/modules/rtpengine/rtpengine.c
--- ui-siprouter~/modules/rtpengine/rtpengine.c	2016-02-01 12:36:50.000000000 +0200
+++ ui-siprouter/modules/rtpengine/rtpengine.c	2016-02-01 12:37:29.865048341 +0200
@@ -2208,6 +2208,7 @@
 	bencode_item_t *item, *resp;
 	str callid = STR_NULL, from_tag = STR_NULL, to_tag = STR_NULL, viabranch = STR_NULL;
 	str body = STR_NULL, error = STR_NULL;
+	str temp = STR_NULL, temp_fromtag = STR_NULL;
 	int ret, queried_nodes;
 	struct rtpp_node *node;
 	char *cp;
@@ -2281,8 +2282,12 @@
 	if (ng_flags.rtcp_mux && ng_flags.rtcp_mux->child)
 		bencode_dictionary_add(ng_flags.dict, "rtcp-mux", ng_flags.rtcp_mux);
 
-	bencode_dictionary_add_str(ng_flags.dict, "call-id", &callid);
-
+	temp.s = NULL;
+	if (!bencode_dictionary_get_str(ng_flags.dict, "call-id", &temp))
+		bencode_dictionary_add_str(ng_flags.dict, "call-id", &callid);
+	else if (temp.s) {
+		LM_NOTICE("using call-id from command flags: %.*s\n",temp.len,temp.s);
+	}
 	if (ng_flags.via) {
 		if (ng_flags.via == 1 || ng_flags.via == 2)
 			ret = get_via_branch(msg, ng_flags.via, &viabranch);
@@ -2308,7 +2313,8 @@
 	if ((msg->first_line.type == SIP_REQUEST && op != OP_ANSWER)
 		|| (msg->first_line.type == SIP_REPLY && op == OP_ANSWER))
 	{
-		bencode_dictionary_add_str(ng_flags.dict, "from-tag", &from_tag);
+		if (!bencode_dictionary_get_str(ng_flags.dict, "from-tag", &temp_fromtag))
+			bencode_dictionary_add_str(ng_flags.dict, "from-tag", &from_tag);
 		if (ng_flags.to && to_tag.s && to_tag.len)
 			bencode_dictionary_add_str(ng_flags.dict, "to-tag", &to_tag);
 	}
@@ -2340,7 +2346,10 @@
 			LM_ERR("queried nodes limit reached\n");
 			goto error;
 		}
-		node = select_rtpp_node(callid, viabranch, 1);
+		if (temp.s)
+			node = select_rtpp_node(temp, viabranch, 1);
+		else 
+			node = select_rtpp_node(callid, viabranch, 1);
 		if (!node) {
 			LM_ERR("no available proxies\n");
 			goto error;
